/*
SPDX-License-Identifier: Apache-2.0

Copyright Contributors to the Submariner project.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// LatencyRTTSpecApplyConfiguration represents an declarative configuration of the LatencyRTTSpec type for use
// with apply.
type LatencyRTTSpecApplyConfiguration struct {
	Last    *string `json:"last,omitempty"`
	Min     *string `json:"min,omitempty"`
	Average *string `json:"average,omitempty"`
	Max     *string `json:"max,omitempty"`
	StdDev  *string `json:"stdDev,omitempty"`
}

// LatencyRTTSpecApplyConfiguration constructs an declarative configuration of the LatencyRTTSpec type for use with
// apply.
func LatencyRTTSpec() *LatencyRTTSpecApplyConfiguration {
	return &LatencyRTTSpecApplyConfiguration{}
}

// WithLast sets the Last field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Last field is set to the value of the last call.
func (b *LatencyRTTSpecApplyConfiguration) WithLast(value string) *LatencyRTTSpecApplyConfiguration {
	b.Last = &value
	return b
}

// WithMin sets the Min field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Min field is set to the value of the last call.
func (b *LatencyRTTSpecApplyConfiguration) WithMin(value string) *LatencyRTTSpecApplyConfiguration {
	b.Min = &value
	return b
}

// WithAverage sets the Average field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Average field is set to the value of the last call.
func (b *LatencyRTTSpecApplyConfiguration) WithAverage(value string) *LatencyRTTSpecApplyConfiguration {
	b.Average = &value
	return b
}

// WithMax sets the Max field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Max field is set to the value of the last call.
func (b *LatencyRTTSpecApplyConfiguration) WithMax(value string) *LatencyRTTSpecApplyConfiguration {
	b.Max = &value
	return b
}

// WithStdDev sets the StdDev field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StdDev field is set to the value of the last call.
func (b *LatencyRTTSpecApplyConfiguration) WithStdDev(value string) *LatencyRTTSpecApplyConfiguration {
	b.StdDev = &value
	return b
}
